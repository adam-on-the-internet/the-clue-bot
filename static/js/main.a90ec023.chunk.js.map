{"version":3,"sources":["components/layout/Header.js","constants.js","components/pages/About.js","components/layout/Loading.js","components/MysteryDisplay/MysteryDate.js","components/MysteryDisplay/MysterySolved.js","components/MysteryDisplay/MysteryAnnouncements.js","components/MysteryDisplay/ClueTracker/ClueTrackerRow.js","components/MysteryDisplay/ClueTracker/ClueTrackerTable.js","components/MysteryDisplay/ClueTracker/MysteryClueTracker.js","components/MysteryDisplay/MysteryDisplay.js","components/pages/Home.js","components/MysteryStats/OccurrenceDisplay.js","components/pages/Stats.js","components/pages/Solved.js","components/pages/Mystery.js","App.js","reportWebVitals.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","href","target","rel","to","CLUE_BOT_SOLVED","About","textStyle","Component","paddingLeft","paddingRight","Loading","MysteryDate","mystery","this","props","d","Date","dateStarted","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","dateNote","MysterySolved","subtitle","solved","victim","culprit","scene","weapon","MysteryAnnouncements","announcements","map","announcement","i","trimmedAnnouncement","statusStart","indexOf","slice","removeStatusFromAnnouncement","itemStyle","listStyle","marginTop","ClueTrackerRow","item","relevantClue","find","clue","includes","itemSymbol","itemClue","undefined","ClueTrackerTable","tableName","options","choiceRows","choice","index","tableStyle","marginLeft","marginRight","marginBottom","MysteryClueTracker","trackerStyle","sceneOptions","weaponOptions","culpritOptions","MysteryDisplay","title","Home","currentMystery","OccurrenceDisplay","groupName","occurrences","items","filter","occurrence","name","count","Stats","stats","crimeSceneOccurrences","culpritOccurrences","murderWeaponOccurrences","victimOccurrences","sceneCount","solvedMysteryCount","suspectCount","weaponCount","Solved","solvedMysteries","mysteries","_id","styleCenter","Mystery","id","App","state","axios","get","then","res","setState","data","className","exact","path","render","Fragment","match","params","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a90ec023.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>The Clue Bot</h1>\r\n            <h2>\r\n                <a style={linkStyle} href=\"https://twitter.com/TheClueBot\" target=\"_blank\" rel=\"noreferrer\">\r\n                    on Twitter @TheClueBot\r\n                </a>\r\n            </h2>\r\n            <h3>\r\n                <Link to=\"/\" style={linkStyle}>Current Mystery</Link>\r\n                |\r\n                <Link to=\"/solved\" style={linkStyle}>Solved Mysteries</Link>\r\n                |\r\n                <Link to=\"/about\" style={linkStyle}>About</Link>\r\n                |\r\n                <Link to=\"/stats\" style={linkStyle}>Stats</Link>\r\n            </h3>\r\n        </header>\r\n    );\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px',\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none',\r\n    padding: 5,\r\n};\r\n\r\nexport default Header;\r\n","export const CLUE_BOT_SOLVED = `https://aoti-basic-express-app.herokuapp.com/clueBot`;\r\nexport const CLUE_BOT_CURRENT = CLUE_BOT_SOLVED + `/current`;\r\nexport const CLUE_BOT_STATS = CLUE_BOT_SOLVED + `/stats`;\r\n","import React, {Component} from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>About</h2>\r\n                <hr/>\r\n                <div style={textStyle}>\r\n                <p>\r\n                    The Clue Bot runs through a cycle of creating and solving murder mysteries. Each mystery consists of\r\n                    a Victim, Culprit, Murder Weapon, Crime Scene, and Clues that lead to the solution. These aspects\r\n                    and more are randomly-generated from lists I have compiled. A Twitter Bot tweets out updates as the\r\n                    mysteries are unravelled.\r\n                </p>\r\n                <p>\r\n                    Created by:\r\n                </p>\r\n                <p>\r\n                    <a href=\"http://www.adamontheinternet.com/\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Adam on the Internet\r\n                    </a>\r\n                </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst textStyle = {\r\n    paddingLeft: 30,\r\n    paddingRight: 30,\r\n    textAlign: 'left',\r\n};\r\n\r\nexport default About;\r\n","import React, {Component} from 'react';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Loading...</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass MysteryDate extends Component {\r\n    render() {\r\n        const {mystery} = this.props;\r\n\r\n        const d = new Date(mystery.dateStarted)\r\n        const ye = new Intl.DateTimeFormat('en', {year: 'numeric'}).format(d);\r\n        const mo = new Intl.DateTimeFormat('en', {month: 'long'}).format(d);\r\n        const da = new Intl.DateTimeFormat('en', {day: '2-digit'}).format(d);\r\n        const dateNote = `Mystery started on ${mo} ${da}, ${ye}`;\r\n\r\n        return (\r\n            <div>\r\n                <p>{dateNote}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMysteryDate.propTypes = {\r\n    mystery: PropTypes.object,\r\n}\r\n\r\nexport default MysteryDate;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass MysterySolved extends Component {\r\n    render() {\r\n        const {mystery} = this.props;\r\n\r\n        const subtitle = mystery.solved\r\n            ? `${mystery.victim} was killed by ${mystery.culprit} in the ${mystery.scene} with the ${mystery.weapon}.`\r\n            : \"The mystery has not yet been solved.\";\r\n\r\n        return (\r\n            <div>\r\n                <p>Solution: {subtitle}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMysterySolved.propTypes = {\r\n    mystery: PropTypes.object,\r\n}\r\n\r\nexport default MysterySolved;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass MysteryAnnouncements extends Component {\r\n    render() {\r\n        const {mystery} = this.props;\r\n\r\n        const announcements = mystery.announcements.map((announcement, i) => {\r\n            const trimmedAnnouncement = removeStatusFromAnnouncement(announcement);\r\n            return (\r\n                <li key={i} style={itemStyle}>\r\n                    {trimmedAnnouncement}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <hr/>\r\n                <h3>Announcements</h3>\r\n                <hr/>\r\n                <ul style={listStyle}>\r\n                    {announcements}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction removeStatusFromAnnouncement(announcement) {\r\n    const statusStart = announcement.indexOf(\"(The\");\r\n    return announcement.slice(0, statusStart);\r\n}\r\n\r\nconst listStyle = {\r\n    textAlign: \"left\",\r\n};\r\n\r\nconst itemStyle = {\r\n    marginTop: 10,\r\n};\r\n\r\nMysteryAnnouncements.propTypes = {\r\n    mystery: PropTypes.object,\r\n}\r\n\r\nexport default MysteryAnnouncements;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ClueTrackerRow extends Component {\r\n    render() {\r\n        const {announcements, item} = this.props;\r\n        const relevantClue = announcements.find((clue) => {\r\n            return clue.includes(\"Clue #\") && clue.includes(item);\r\n        });\r\n        const clueRevealed = relevantClue !== undefined;\r\n        let itemSymbol = \"\";\r\n        let itemClue = \"\";\r\n        if (clueRevealed) {\r\n            itemSymbol = \"X\";\r\n            itemClue = removeStatusFromAnnouncement(relevantClue, item);\r\n        }\r\n        return (\r\n            <tr>\r\n                <td>{item}</td>\r\n                <td>{itemSymbol}</td>\r\n                <td>{itemClue}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nfunction removeStatusFromAnnouncement(announcement) {\r\n    const statusStart = announcement.indexOf(\"(The\");\r\n    return announcement.slice(0, statusStart);\r\n}\r\n\r\nClueTrackerRow.propTypes = {\r\n    item: PropTypes.string,\r\n    announcements: PropTypes.array,\r\n}\r\n\r\nexport default ClueTrackerRow;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ClueTrackerRow from \"./ClueTrackerRow\";\r\n\r\nclass ClueTrackerTable extends Component {\r\n    render() {\r\n        const {tableName, options, announcements} = this.props;\r\n\r\n        if (options === undefined) {\r\n            return (\r\n                <p>{tableName} options are not known yet.</p>\r\n            );\r\n        }\r\n\r\n        const choiceRows = options.map((choice, index) => (\r\n            <ClueTrackerRow key={index} item={choice} announcements={announcements} index={index}/>\r\n        ));\r\n        return (\r\n            <>\r\n                <h3>{tableName} Clue Tracker</h3>\r\n                <table style={tableStyle}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>{tableName}</th>\r\n                        <th>Eliminated</th>\r\n                        <th>Clue</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {choiceRows}\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst tableStyle = {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    marginBottom: 10,\r\n}\r\n\r\nClueTrackerTable.propTypes = {\r\n    tableName: PropTypes.string,\r\n    options: PropTypes.array,\r\n    announcements: PropTypes.array,\r\n}\r\n\r\nexport default ClueTrackerTable;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ClueTrackerTable from \"./ClueTrackerTable\";\r\n\r\nclass MysteryClueTracker extends Component {\r\n    render() {\r\n        const {mystery} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <hr/>\r\n                <h3>Clue Trackers</h3>\r\n                <hr/>\r\n                <div style={trackerStyle}>\r\n                    <ClueTrackerTable tableName=\"Scene\" announcements={mystery.announcements} options={mystery.sceneOptions} />\r\n                    <ClueTrackerTable tableName=\"Weapon\" announcements={mystery.announcements} options={mystery.weaponOptions} />\r\n                    <ClueTrackerTable tableName=\"Suspect\" announcements={mystery.announcements} options={mystery.culpritOptions} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst trackerStyle = {\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n};\r\n\r\nMysteryClueTracker.propTypes = {\r\n    mystery: PropTypes.object,\r\n}\r\n\r\nexport default MysteryClueTracker;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loading from \"../layout/Loading\";\r\nimport MysteryDate from \"./MysteryDate\";\r\nimport MysterySolved from \"./MysterySolved\";\r\nimport MysteryAnnouncements from \"./MysteryAnnouncements\";\r\nimport MysteryClueTracker from \"./ClueTracker/MysteryClueTracker\";\r\n\r\nclass MysteryDisplay extends Component {\r\n    render() {\r\n        const {mystery} = this.props;\r\n        if (mystery === null) {\r\n            return (\r\n                <Loading/>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h2>{mystery.title}</h2>\r\n                <hr/>\r\n                <MysteryDate mystery={mystery}/>\r\n                <MysterySolved mystery={mystery} />\r\n                <MysteryClueTracker mystery={mystery} />\r\n                <MysteryAnnouncements mystery={mystery} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMysteryDisplay.propTypes = {\r\n    mystery: PropTypes.object,\r\n}\r\n\r\nexport default MysteryDisplay;\r\n","import React, {Component} from 'react';\r\nimport MysteryDisplay from \"../MysteryDisplay/MysteryDisplay\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        const {currentMystery} = this.props;\r\n        return (\r\n            <div>\r\n                <MysteryDisplay mystery={currentMystery}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    currentMystery: PropTypes.object,\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass OccurrenceDisplay extends Component {\r\n    render() {\r\n        const {groupName, occurrences} = this.props;\r\n\r\n        const size = 5;\r\n        const items = occurrences\r\n            .filter((occurrence, index) => {\r\n                return index < size;\r\n            })\r\n            .map((occurrence, index) => (\r\n                <p key={index}>\r\n                    #{index + 1}. {occurrence.name} ({occurrence.count} times)\r\n                </p>\r\n            ));\r\n\r\n        return (\r\n            <div>\r\n                <hr/>\r\n                <h2>Occurrences of {groupName}</h2>\r\n                {items}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nOccurrenceDisplay.propTypes = {\r\n    groupName: PropTypes.string.isRequired,\r\n    occurrences: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default OccurrenceDisplay;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loading from \"../layout/Loading\";\r\nimport OccurrenceDisplay from \"../MysteryStats/OccurrenceDisplay\";\r\n\r\nclass Stats extends Component {\r\n    render() {\r\n        if (this.props.stats === null) {\r\n            return (\r\n                <div>\r\n                    <Loading/>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        // each occurrence has a name & count\r\n        const {\r\n            crimeSceneOccurrences, culpritOccurrences, murderWeaponOccurrences, victimOccurrences,\r\n            sceneCount, solvedMysteryCount, suspectCount, weaponCount\r\n        } = this.props.stats;\r\n\r\n        return (\r\n            <div>\r\n                <p>{solvedMysteryCount} mysteries have been solved!</p>\r\n                <p>There are {sceneCount} crime scenes available.</p>\r\n                <p>There are {suspectCount} suspects available.</p>\r\n                <p>There are {weaponCount} weapons available.</p>\r\n                <OccurrenceDisplay groupName=\"Crime Scenes\" occurrences={crimeSceneOccurrences}/>\r\n                <OccurrenceDisplay groupName=\"Culprits\" occurrences={culpritOccurrences}/>\r\n                <OccurrenceDisplay groupName=\"Murder Weapons\" occurrences={murderWeaponOccurrences}/>\r\n                <OccurrenceDisplay groupName=\"Victims\" occurrences={victimOccurrences}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStats.propTypes = {\r\n    stats: PropTypes.object,\r\n}\r\n\r\nexport default Stats;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loading from \"../layout/Loading\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Solved extends Component {\r\n    render() {\r\n        const {solvedMysteries} = this.props;\r\n        if (solvedMysteries === null) {\r\n            return (\r\n                <Loading/>\r\n            );\r\n        }\r\n\r\n        const mysteries = solvedMysteries.map(mystery => (\r\n            <tr key={mystery._id}>\r\n                <td>\r\n                    {mystery.title}\r\n                </td>\r\n                <td>\r\n                    <Link to={'/mystery/' + mystery._id} style={linkStyle}>\r\n                        <button>\r\n                            Details\r\n                        </button>\r\n                    </Link>\r\n                </td>\r\n            </tr>\r\n        ));\r\n\r\n        return (\r\n            <div>\r\n                <table style={styleCenter}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>\r\n                            Name\r\n                        </th>\r\n                        <th>\r\n                            Details\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {mysteries}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSolved.propTypes = {\r\n    solvedMysteries: PropTypes.array,\r\n}\r\n\r\nconst styleCenter = {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    marginBottom: 10,\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#000',\r\n    textDecoration: 'none',\r\n    padding: 5,\r\n};\r\n\r\nexport default Solved;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loading from \"../layout/Loading\";\r\nimport MysteryDisplay from \"../MysteryDisplay/MysteryDisplay\";\r\n\r\nclass Mystery extends Component {\r\n    render() {\r\n        const {solvedMysteries, id} = this.props;\r\n        if (solvedMysteries === null || id === null) {\r\n            return (\r\n                <Loading/>\r\n            );\r\n        }\r\n\r\n        const mystery = solvedMysteries.find((mystery) => {\r\n            return mystery._id === id;\r\n        });\r\n\r\n        if (mystery === undefined) {\r\n            return (\r\n                <div>\r\n                    <p>No mystery found.</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <MysteryDisplay mystery={mystery} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMystery.propTypes = {\r\n    solvedMysteries: PropTypes.array,\r\n    id: PropTypes.string,\r\n}\r\n\r\nexport default Mystery;\r\n","import './App.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport React, {Component} from 'react';\nimport axios from 'axios';\nimport {CLUE_BOT_CURRENT, CLUE_BOT_SOLVED, CLUE_BOT_STATS} from \"./constants\";\nimport About from \"./components/pages/About\";\nimport Home from \"./components/pages/Home\";\nimport Stats from \"./components/pages/Stats\";\nimport Solved from \"./components/pages/Solved\";\nimport Mystery from \"./components/pages/Mystery\";\n\nclass App extends Component {\n    state = {\n        solvedMysteries: null,\n        currentMystery: null,\n        stats: null,\n    };\n\n    componentDidMount() {\n        axios.get(CLUE_BOT_SOLVED)\n            .then(res => this.setState({solvedMysteries: res.data}));\n        axios.get(CLUE_BOT_CURRENT)\n            .then(res => this.setState({currentMystery: res.data}));\n        axios.get(CLUE_BOT_STATS)\n            .then(res => this.setState({stats: res.data}));\n    }\n\n    render() {\n        return (\n            <Router>\n                <div className=\"App\">\n                    <div className=\"container\">\n                        <Header/>\n                        <Route exact path=\"/\" render={props => (\n                            <React.Fragment>\n                                <Home currentMystery={this.state.currentMystery}/>\n                            </React.Fragment>\n                        )}/>\n                        <Route exact path=\"/stats\" render={props => (\n                            <React.Fragment>\n                                <h2>Stats</h2>\n                                <hr/>\n                                <Stats stats={this.state.stats}/>\n                            </React.Fragment>\n                        )}/>\n                        <Route exact path=\"/solved\" render={props => (\n                            <React.Fragment>\n                                <h2>Solved Mysteries</h2>\n                                <hr/>\n                                <Solved solvedMysteries={this.state.solvedMysteries}/>\n                            </React.Fragment>\n                        )}/>\n                        <Route exact path=\"/mystery/:id\" render={props => (\n                            <React.Fragment>\n                                <Mystery solvedMysteries={this.state.solvedMysteries} id={props.match.params.id}/>\n                            </React.Fragment>\n                        )}/>\n                        <Route path=\"/about\" exact component={About}/>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}